@model CarInsurance.InsuranceApp

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>InsuranceApp</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PolStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PolStartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PolStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            @for (int i = 0; i < 5; i++)
            {

                <div class="form-group" style="border:solid">
                    <div class="form-group" style="padding-left: 1%">
                        @Html.LabelFor(model => model.DriverDetails[i].Name, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.LabelFor(model => model.DriverDetails[i].Occupation, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.LabelFor(model => model.DriverDetails[i].DOB, htmlAttributes: new { @class = "control-label col-md-3", @style = "margin-right: 10%" })

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DriverDetails[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverDetails[i].Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DriverDetails[i].Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverDetails[i].Occupation, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3" style="margin-right:20%">
                            @Html.EditorFor(model => model.DriverDetails[i].DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverDetails[i].DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @for (int j = 0; j < 5; j++)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.DriverDetails[i].Claims, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DriverDetails[i].Claims[j], new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DriverDetails[i].Claims[j], "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
